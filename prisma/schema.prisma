// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  games    Game[]
  roles    Role[]
}

model Game {
  id            Int      @id @default(autoincrement())
  name          String
  storyteller   User     @relation(fields: [storytellerId], references: [id], onDelete: Cascade)
  storytellerId Int
  roles         Role[]
  players       Player[]
  winner        String?
}

model Role {
  roleId        Int      @id @default(autoincrement())
  name          String
  description   String?
  updated       Boolean  @default(false)
  image         String?
  storyteller   User     @relation(fields: [storytellerId], references: [id], onDelete: Cascade)
  storytellerId Int
  games         Game[]
  Player        Player[]
}

model Reminders {
  reminderId     Int     @id @default(autoincrement())
  content        String
  image String?
  Player         Player? @relation(fields: [playerPlayerId], references: [playerId], onDelete: Cascade)
  playerPlayerId Int?
}

model Player {
  playerId Int         @id @default(autoincrement())
  name     String
  alive    Boolean     @default(true)
  reminder Reminders[]
  role     Role?       @relation(fields: [roleId], references: [roleId], onDelete: Cascade)
  roleId   Int?
  Game     Game?       @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId   Int?
}
